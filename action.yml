# Basic data
name: "Publish to NPM"
description: "Will publish a package to NPM registry"

# Input values
inputs:
  bot-access-token:
    description: Personal access token for Bot account
    required: true

  node-automation-token:
    description: "Publishing token from NPM registry"
    required: true

  node-version:
    description: Node version to run on
    required: true
    default: 18

  git-user-name:
    description: "Name to use when committing"
    required: true
    default: "AUTO RELEASE"

  git-user-email:
    description: "Email to use when committing"
    required: true
    default: "auto-release@lokalise.com"

  label-major:
    description: 'Name used for the "major" label'
    required: true
    default: "major"

  label-minor:
    description: 'Name used for the "minor" label'
    required: true
    default: "minor"

  label-patch:
    description: 'Name used for the "patch" label'
    required: true
    default: "patch"

  install-command:
    required: true
    description: "Installation command"
    default: "npm ci"

  build-command:
    description: "Build command"
    required: true
    default: "npm run build"

# Steps to execute
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0 # fetch all commits so auto-changelog is correctly generating
        token: ${{ inputs.bot-access-token }}

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install Dependencies
      shell: bash
      run: ${{ inputs.install-command }}

    - name: Build Package
      shell: bash
      run: ${{ inputs.build-command }}

    - name: Setup git config
      env:
        USER_EMAIL: ${{ inputs.git-user-email }}
        USER_NAME: ${{ inputs.git-user-name }}
      shell: bash
      run: |
        git config --global user.email "$USER_EMAIL"
        git config --global user.name "$USER_NAME"

    - name: Major label detected
      shell: bash
      env:
        LABEL: ${{ inputs.label-major }}
      if: contains(github.event.pull_request.labels.*.name, '$LABEL')
      run: npm version major

    - name: Minor label detected
      shell: bash
      env:
        LABEL: ${{ inputs.label-minor }}
      if: contains(github.event.pull_request.labels.*.name, '$LABEL')
      run: npm version minor

    - name: Patch label detected
      shell: bash
      env:
        LABEL: ${{ inputs.label-patch }}
      if: contains(github.event.pull_request.labels.*.name, '$LABEL')
      run: npm version patch

    - name: Git push
      shell: bash
      run: git push origin main && git push --tags

    - name: Release Package
      shell: bash
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ inputs.node-automation-token }}
